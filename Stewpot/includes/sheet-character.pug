-
	const ajobs = [ 
		'Bard',
		'Druid',
		'Fighter',
		'Paladin',
		'Ranger',
		'Rogue',
		'Swashbuckler', 
		'Wizard',
		'Augur',
		'Beastmaster',
		'Modder',
		'Shadowspinner',
		'Spiritcaller',
		'Warlock',
		'Custom',
	];
	const tjobs = [ 
		'Apothecary',
		'Chef',
		'Crafter',
		'Farmer',
		'Healer',
		'Hunter', 
		'Lookout',
		'Merchant',
		'Poet',
		'Scholar',
		'Ice-Vendor',
		'MagiTech-Farmer',
		'Matchmaker',
		'Mezzo-Soprano',
		'Playwright',
		'Tattoo-Artist',
		'Custom',
	];
	const axps = {
		'Bard': [ "Bag of Tricks: Card magic, juggling clubs, and other spectacles", "Devil’s Fingers: Prodigious skill with an instrument", "Alluring Voice: The voice of an angel", "Golden Words: Convince anyone of anything", "Inspiration: Power up your friends" ],
		'Druid': [ "Green Thumb: An affinity for plant magic", "Natural Armor: Skin becomes bark or stone", "Shapeshifter: Various animal forms", "Naturespeak: Understand plants and animals", "Force of Nature: Bend the land around you to your will" ],
		'Fighter': [ "Intimidation: Make them do what you want", "Master of Arms: Armed and dangerous with anything", "Brute Strength: Move the immovable", "Endurance: Nothing can stop you", "Legendary Weapon: An artifact of immense power" ],
		'Paladin': [ "Guidance: A sign from your deity", "Holy Armor: Divine protection", "Healing Touch: Treat wounds", "Smite: Destroy the unholy", "Taunt: Draw enemies towards you" ],
		'Ranger': [ "Deadeye: Pinpoint accuracy", "True North: Unerring sense of direction", "Animal Companion: A wild friend", "Tracking: Follow any trail", "Camouflage: Disappear into nature" ],
		'Rogue': [ "Cat’s Grace: Extraordinary agility", "Nimble Fingers: No lock stays locked, no trap can catch you", "Lightfoot: Act undetected", "Adder’s Fangs: Deadly poisons and their antidotes", "Sixth Sense: Never be caught off guard" ],
		'Swashbuckler': [ "Duellist: Master of the blade", "In the Rigging: Climbing and acrobatic feats", "Sea Legs: Balance on any surface", "Barbed Tongue: Your words hit where they hurt", "Bravado: Never falter" ],
		'Wizard': [ "Prestidigitation: Small wonders", "Fireball: Mastery of flame", "Invisibility: Move unseen", "Magic Missile: Projectiles of astounding accuracy", "Arcana: Vast knowledge of the magical and unusual" ],
		'Augur': [
			'Luck Bank: Declare a superstition as a source of power (3 charges)',
			'Fate Shift: Change the immediate fate of a person',
			'Evil Eye: Dab kohl on your temple to stop one person of your choosing from seeing you',
			'Salty Shoulders: Throw salt over your shoulders to create a shield around your back',
			'Black Cat: A black cat is your warden. However, you’re blamed for all unexplained events',
		],
		'Beastmaster': [
			'Handler: Caring for and communicating with animals',
			'Tracker: Vast geographical knowledge of the region',
			'Hunter’s Sense: Know if danger is close, or if you are being looked at',
			'Master Trapper; Knowledge of various snares and traps',
			'Big Game: Fighter Can fight barehanded against a creature larger than them',
		],
		'Modder': [
			'Blend In: Become an insider',
			'Bloodhound: Memorise veins and arteries',
			'Patch Job: Temporarily fix a mechanical problem',
			'Plan B: Reveal a modification just in time',
			'Modular Outfits: Change appearance at speed',
		],
		'Shadowspinner': [
			'Pinhole: Perfect recall of anything, backwards',
			'Impressionable: Patterns linger on the skin',
			'Untether: Remove any shadow from its caster',
			'Double Jointed: Super flexible hands',
			'Gopher: A silhouette with a single task',
		],
		'Spiritcaller': [
			'Call Spirit: Summon the hidden and the dead',
			'Possessed Might: Borrowed strength and skill—payment pending',
			'Spirit Sympathy: Crossed hearts, dead hopes',
			'Third Eye: See beyond the veil',
			'Ritual Knowledge: Knowing the right rites',
		],
		'Warlock': [
			'Dark Bargain: Succeed for a price',
			'Demon Eyes: See what is hidden',
			'Eldritch Blast: A burst of pure energy',
			'Hex: Vengeful curses',
			'Possession: Channel your patron',
		],
		'Custom': [],
	};
	const txps = {
		'Apothecary': [ "Brewer: Concoct potions, salves, balms, and more", "Smell the Flowers: A keen nose, mastery of scents", "Pipeleaf: Calm the nerves", "Botanist: Know every plant in the area", "Distillation: Strengthen the good in something" ],
		'Chef': [ "Clean Cut: Mince, dice, chop, slice", "Grillmaster: Expert at grilling food and subordinates", "Parts Unknown: Knowledge of ingredients from all over", "Refined Palate: A sense of taste second to none", "Call the Shots: Quick thinking and split-second decisions" ],
		'Crafter': [ "Finesse: Acute manual dexterity", "Repair: Fix anything, with enough time", "Artisan: Create beautiful things", "Mason: Build strong structures", "Patron: You have a wealthy benefactor" ],
		'Farmer': [ "Preservation: Make food taste better and last longer", "Weathervane: Predict the weather a few days in advance", "Bounty: Your harvests are large and exquisite", "Handler: Caring for and communicating with animals", "Home Remedies: Unconventional solutions" ],
		'Healer': [ "Warm Presence: You are comforting to be around", "Safe Haven: Know how to make a space feel welcoming", "Thanatologist: Help the dead find peace, help the living grieve", "Ritual: Know the traditions and customs of many ", "Bandage Wounds: Treat injuries" ],
		'Hunter': [ "The Usual Spot: Know the best areas for hunting and foraging", "Trapper: A steady supply of meat and furs", "Secret Paths: Know the area like the back of your hand", "Lying in Wait: Master of concealment", "Offerings: On good terms with the local spirits" ],
		'Lookout': [ "Eyes on the Horizon: Spot trouble before it starts", "Ears on the Ground: You heard it first", "Organizer: Bring people together", "Garrison: You never have to work alone", "Shoulder Throw: Defend yourself when necessary" ],
		'Merchant': [ "Trader: Something I need for something you need", "Network: Able to obtain anything ", "The Back Room: Satisfy most everyday needs", "The Perfect Gift: Know exactly what people want", "Well-Traveled: Know the customs and languages of the world" ],
		'Poet': [ "Spin Straw into Gold: Tell enchanting stories", "Say the Right Thing: Tell them what they want or need to hear", "Chronicler: Make sure people will remember", "Parable: A lesson for every situation", "A Friend in Need: Know who to call for a favor" ],
		'Scholar': [ "Well Read: You know it, or you know where to learn it ", "Jury Rigging: Invent your way out of a sticky situation", "Keen Observation: Something only you could see", "Defuse: Handle something dangerous", "Streamline: Get it done faster" ],
		'Ice-Vendor': [
			'Warm Body: Endure chills and lonesome nights',
			'Legs That Don’t Quit: Carry a haul home, however far',
			'Cold Cuts: Sculpting ice and cutting down obstacles ',
			'Many-Layered: Coats and undercoats hide secrets and delights',
			'Stay Frosty: Know-how to gauge temperatures and keep cool',
		],
		'MagiTech-Farmer': [
			'Tech MacGyver: Use knowledge of magitech to immediately solve a low-tech problem',
			'Walled Gardens: Create a contained alternate environment',
			'Electric Irrigation: Water with electric properties (power source or weapon)',
			'Magic Fruits: Eating these grants you a glow that is magnetic to others',
			'Molded Dirt: Infuses plants with magical properties',
		],
		'Matchmaker': [
			'Dirty Laundry: Know the juiciest gossip',
			'Family Values: Exert familial or community pressure',
			'Pointers: Advice for social interactions',
			'Set Up: Concoct social situations between two people',
			'Traditionalist: Master of manners, culture, and traditions',
		],
		'Mezzo-Soprano': [
			'Coloratura: Agile dodger between highs and lows',
			'Trousers: Passable without further inspection',
			'“Mom Voice”: Assertion in no uncertain terms',
			'Pitch Perfect: Rough estimates are usually right',
			'Harmonious: Lead many parts to briefly come together in concert',
		],
		'Playwright': [
			'People Watcher: Observing others’ emotions',
			'Cultural Student: Knowledge of foreign cultures and customs',
			'Silver Tongue: Talented at deception and manipulation',
			'Curious: Immediately notice interesting details',
			'Another World: Craft powerful stories that entrance and inspire',
		],
		'Tattoo-Artist': [
			'Aftercare: Apply salves that soothe wounds',
			'Focus: Dedicate yourself to tasks for hours',
			'Storykeeper: Hold ancient tales from generations past',
			'Visionary: Recreate imagery from verbal descriptions',
			'Welcome Home: Make people feel at ease in their body',
		],
		'Custom': [],
	};

.character
	.topline
		.nameblock
			+flabel("Name")
			+text("character_name").fillblank
			+text("character_pronouns").fillblank
			.sublabel
				+translate("pronouns")
		.lookblock
			+flabel("Look")
			+text("character_look").fillblank
	.columns
		.column
			.waqblock
				.fbox
					+flabel("Weapon")
					.blank
						+textarea("character_weapon").fillblank
						+shower("character_weapon")
						.tidy
							+select("select_character_weapon")
								+option('(pick an option or fill in the blank)','')
								- var l = [ "A giant sword, all blunt edges and fierce", "A staff of dark wood, worn smooth", "A sturdy shield polished to a shine", "Twin jeweled daggers", "A bow that seems to hum when drawn", "Spiked gauntlets covered in dents", "A crossbow covered in unknown mechanisms", "A simple sabre", "A dirk with a curious carved hilt", "An enormous hammer carved from bone", "A sword that whispers in its scabbard" ];
								each v in l
									+option(v)
				.fbox
					+flabel("Armor")
					.blank
						+textarea("character_armor").fillblank
						+shower("character_armor")
						+select("select_character_armor")
							+option('(pick an option or fill in the blank)','')
							- var l =  [ 'A rusty suit of armor with a deadly curse', 'An iridescent cloak of feathers', 'Concealed leather and chainmail', 'Black boots with not a speck of dust on them', 'Gloves covered in runes', 'Clothes the color of deep forest', 'A mask', 'A well kept traveling cloak', 'A warm coat', 'Armor crafted from a giant insect shell', 'A tattered royal tunic' ];
							each v in l
								+option(v)
				.fbox
					+flabel("Quirk")
					.blank
						+textarea("character_quirk").fillblank
						+shower("character_quirk")
						+select("select_character_quirk")
							+option('(pick an option or fill in the blank)','')
							- var l = [ 'Eyes always watching', 'One hand hidden under a cloak', 'Hair cut short with a knife', 'Slow, measured movements', 'A smile that doesn’t reach your eyes', 'Shoulders that tense to the sound of metal', 'A preference for sitting in dark corners', 'Sleeping with one eye open ', 'Perfectly straight posture', 'Always muttering wards of protection', 'A gleaming smile' ];
							each v in l
								+option(v)
			.keepblock
				.shead
					+flabel("Keepsakes")
				.kbody
					+fieldset("keepsakes")
						+textarea("keepsake")

			.listblock
				.shead
					+flabel("Notes")
				+editoggle("notes")

		.column
			.advblock
				.shead
					+bflabel("Adventurer Job")
				.jbody
					+select("ajob").job.jobcustomcheck
						+option('(pick an adventurer job)','')
						each v in ajobs
							+option(v,v)
					+hideunless("ajob")
					.Custom
						+text('custom_ajob_name')
				.shead
					+flabel("Adventurer Experiences")
				.jbody
					each xp in [1,2,3]
						.markable
							+togglebox("axp"+xp)
							.blank
								+tshower("axp"+xp)
								+textarea("axp"+xp)
								+thider("axp"+xp)
								.crossout
									+display("axp"+xp)
								+shower("axp"+xp)
								.tidy
									each j in ajobs
										- if ( axps[j].length > 0 )
											+hideunless("ajob")
											+select('select_axp'+xp)(class=j)
												- var article = 'a'; var atext = j.charAt(0); 
												- if ( atext == "A" || atext == "E" || atext == "I" || atext == "O" || atext == "U" ) { article = 'an'; }
												+option('(pick '+article+' '+j+' experience or fill in the blank)','')
												each x in axps[j]
													+option(x)
			.townblock
				.shead
					+bflabel("Town Job")
				.jbody
					+select("tjob").job
						+option('(pick a town job)','')
						each v in tjobs
							+option(v,v)
					+hideunless("tjob")
					.Custom
						+text('custom_tjob_name')
				.shead
					+flabel("Town Experiences")
				.jbody
					each xp in [0,1,2,3]
						if xp > 0
							+thider("axp"+xp)
						.blank
							+textarea("txp"+xp)
							+shower("txp"+xp)
							.tidy
								each j in tjobs
									- if ( txps[j].length > 0 )
										+hideunless("tjob")
										+select('select_txp'+xp)(class=j)
											- var article = 'a'; var atext = j.charAt(0); 
											- if ( atext == "A" || atext == "E" || atext == "I" || atext == "O" || atext == "U" ) { article = 'an'; }
											+option('(pick '+article+' '+j+' experience or fill in the blank)','')
											each x in txps[j]
												+option(x)
