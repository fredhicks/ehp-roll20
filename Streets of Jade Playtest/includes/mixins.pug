- 
	var translations = { 
		"rolls": "rolls",
		"Streets of Jade": "Streets of Jade",
		"arts-oration": "Arts and Oration",
		"blood-valor": "Blood and Valor",
		"craft-reason": "Craft and Reason",
		"resolve-spirit": "Resolve and Spirit",
		"family-name": "Name Die",
		"main-skill": "First Skill",
		"second-skill": "Second Skill",
		"reputation": "Reputation",
		"reputation2": "Reputation",
		"advantage1": "Advantage",
		"advantage2": "Advantage",
		"advantage3": "Advantage",
		"advantage4": "Advantage",
		"advantage5": "Advantage",
		"advantage6": "Advantage",
		"advantage7": "Advantage",
		"advantage8": "Advantage",
		"advantage9": "Advantage",
		"advantage10": "Advantage",
		"support": "Support",
		"backing": "Backing",
		"backing-asset": "Asset",
		"skirmishes": "skirmishes",
		"family-name-die": "Name",
		"skill-arts-oration-die": "Arts and Oration",
		"skill-blood-valor-die": "Blood and Valor",
		"skill-craft-reason-die": "Craft and Reason",
		"skill-resolve-spirit-die": "Resolve and Spirit",
		"reputation-die": "Reputation",
		"reputation-plus-die": "Reputation",
		"other": "Other",
		"Asset": "Asset",
		"Command": "Command",
		"Officer": "Officer",
	};

// Translation

mixin translate(text)
	- if ( typeof(translations[text]) == "undefined" ) { translations[text] = text; }
	span(data-i18n=text)&attributes(attributes) #{text}
	| 

mixin t(text)
	+translate(text)&attributes(attributes)

mixin translations
	- var contents = JSON.stringify(translations,null,"\t");
	//
		translation.json:
		!{contents}

// Attribute Display

mixin display(f)
	span(name="attr_"+f class!=attributes.class)
		if block
			block

// Input Elements

mixin select(f)
	select(name='attr_'+f class!=attributes.class)
		if block
			block

mixin option(t,v)
	- if ( typeof(translations[t]) == "undefined" ) { translations[t] = t; }
	if ( typeof(v) == "undefined" )
		option(data-i18n=t)
	else
		option(value=v data-i18n=t)

mixin toption(t)
	- if ( typeof(translations[t]) == "undefined" ) { translations[t] = t; }
	option(value=t data-i18n=t)

mixin hidden(f,v)
	- if ( typeof(v) == "undefined" ) { v = ""; }
	input(type='hidden' name='attr_'+f value=v class!=attributes.class)

mixin number(f,v,min,max)
	- if ( typeof(v) == "undefined" ) { v = "0"; }
	input(type='number' name='attr_'+f value=v min=min max!=max class!=attributes.class)

mixin text(f)
	input(type='text' name='attr_'+f class!=attributes.class)

mixin textarea(f)
	textarea(name='attr_'+f class!=attributes.class)
		if block
			block

// Fieldset structure

mixin fieldset(f)
	fieldset(class="repeating_"+f)
		if block
			block

// Visibility Controls

mixin hider(f)
	input(name="attr_"+f type="hidden" class="hider" value="")

mixin shower(f)
	input(name="attr_"+f type="hidden" class="shower" value="")

mixin mhider(f)
	input(name="attr_"+f type="hidden" class="mhider" value="")

mixin thider(f,v)
	- if ( typeof(v) == "undefined" ) { v = "0"; }
	input(name="attr_toggle_"+f type="hidden" class="thider" value=v)

mixin tdimmer(f,v)
	- if ( typeof(v) == "undefined" ) { v = "0"; }
	input(name="attr_toggle_"+f type="hidden" class="tdimmer" value=v)

mixin tshower(f,v)
	- if ( typeof(v) == "undefined" ) { v = "0"; }
	input(name="attr_toggle_"+f type="hidden" class="tshower" value=v)

mixin titcher(f,v)
	- if ( typeof(v) == "undefined" ) { v = "0"; }
	input(name="attr_toggle_"+f type="hidden" class="titcher" value=v)

// Checkboxes

mixin ibox(f)
	span
		+thider(f)
		button(type="action" name="act_itch" value=f).cbox.marked
		+tshower(f)
		button(type="action" name="act_mark" value=f).cbox.unmarked
		+titcher(f)
		button(type="action" name="act_unmark" value=f).cbox.itched

mixin cbox(f,v)
	- if ( typeof(v) == "undefined" ) { v = "0"; }
	+thider(f,v)
	button(type="action" name="act_unmark" value=f class!=attributes.class).cbox.marked
	+tshower(f,v)
	button(type="action" name="act_mark" value=f class!=attributes.class).cbox.unmarked

mixin togglebox(f)
	div
		+cbox(f)
	input(name="attr_toggle_"+f type="hidden" class="state" value="0")

// Quick Format Structures for Streets of Jade

mixin lozenge(f,t)
	.lozenge(class!=attributes.class)
		+text(f)
		.tag
			+t(t)
		if block
			.sideblock
				block

mixin dielabel(t)
	.dielabel(class!=attributes.class)
		+t(t)

mixin die(f,dlist)
	- if ( typeof(dlist) == "undefined" ) { dlist = [4,6,8,10,12]; }
	.die(class!=attributes.class)
		+hidden(f).chosendie
		+select(f)
			option(value="")
			each val in dlist
				option(value=val)= val
		.polyhedral.d4.df-d4-4
		.polyhedral.d6.df-d6-6
		.polyhedral.d8.df-d8-8
		.polyhedral.d10.df-d10-10
		.polyhedral.d12.df-d12-12

mixin favor
	.favor
		.favorbox
			+textarea("favored-name").favored
			+t("I owe them...").owe.smallnote.italic
			+t("They owe me...").owed.smallnote.italic
		.favormarks
			each o in [1,2,3]
				+cbox("favor-owe-"+o).brightgold
			each o in [1,2,3]
				+cbox("favor-owed-"+o).darkgold

mixin ffavor
	.favor
		.favorbox
			+textarea("favored-name").favored
			+t("I owe them...").owe.smallnote.italic
			+t("They owe me...").owed.smallnote.italic
		.favormarks
			each o in [1,2,3,4,5]
				+cbox("favor-owe-"+o).brightgold
			each o in [1,2,3,4,5]
				+cbox("favor-owed-"+o).darkgold

mixin goal
	.goal.bordered
		.desc
			+textarea("goal").squat
		.goalmarks
			each o in [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
				+cbox("favor-owe-"+o).jade

// Used in fieldsets, so there's no need to give it different attribute names from use to use

mixin skirmishbutton
	+thider("skirmish")
	button(type="action" name="act_unmark" class="redroll" value="skirmish")
		+t("Close")
	+tshower("skirmish")
	button(type="action" name="act_mark" class="redroll" value="skirmish")
		+t("Skirmish")

